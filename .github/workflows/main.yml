name: Build/Deploy

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python_version }}

    - name: Cache Dependencies
      id: lint-wheel-cache
      uses: actions/cache@v3
      with:
        path: .wheels
        key: ${{ runner.os }}-cp${{ matrix.python_version }}-lint-wheels-${{ hashFiles('requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-cp${{ matrix.python_version }}-lint-wheels-

    - name: Build dependencies as wheels
      if: steps.lint-wheel-cache.outputs.cache-hit != 'true'
      run: |
        mkdir --parents .wheels
        python -m pip install --upgrade pip wheel
        pip wheel --wheel-dir .wheels -r requirements/dev.txt

    - name: Install dependency wheels
      run: |
        pip install --no-index --find-links=.wheels -r requirements/dev.txt

    - name: Cache pre-commit setup
      id: pre-commit-cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-cp${{ matrix.python_version }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-cp${{ matrix.python_version }}-pre-commit-

    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install --no-index --find-links=.wheels -r requirements/dev.txt

    - name: Run pre-commit
      run: |
        pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.5", "3.6", "3.7", "3.8", "pypy-3.6", "pypy-3.7", "pypy-3.8"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python_version }}
    - name: Test with pytest
      run: |
        pip install -r requirements/test.txt
        py.test
